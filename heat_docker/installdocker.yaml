heat_template_version: 2013-05-23

parameters:
  key_name:
    type: string
    default: TP_Cloud_maxime
  image:
    type: string
    default: ubuntu1404
  flavor:
    type: string
    default: m1.small
  private-network:
    type: string
    default: my-private-network
  timeout:
    type: number
    default: 1800

resources:
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: wait_handle}
      count: 2
      timeout: {get_param: timeout}

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  docker-test:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: {get_param: flavor}
      key_name: {get_param: key_name}
      networks: [{network: {get_param: private-network}}]
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            curl -sSL https://get.docker.com/ | sh
            wc_notify --data-binary '{"status": "SUCCESS", "reason": "Docker installed"}'

            cd /home/ubuntu
            git clone https://github.com/3l3ktr0/CloudHP.git cloudHP
            cd cloudHP
            sudo docker build ./webserver -t cloudhp_webserver
            sudo docker build ./microservices -t b_p_common
            sudo docker build ./db_i -t db_i
            sudo docker build ./db_s -t db_s &
            sudo docker build ./microservices/i -t cloudhp_i &
            sudo docker build ./microservices/b -t cloudhp_b &
            sudo docker build ./microservices/p -t cloudhp_p &
            sudo docker build ./microservices/s -t cloudhp_s &
            sudo docker build ./microservices/w -t cloudhp_w &
            wait
            wc_notify --data-binary '{"status": "SUCCESS", "reason": "Docker images built"}'

          params:
            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }

outputs:
  instance_name:
    value: {get_attr: [docker-test, name]}
  instance_ip:
    value: {get_attr: [docker-test, first_address]}
